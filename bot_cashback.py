from tokin_bot import TOKIN, id_user
from aiogram import Bot, Dispatcher, executor, types
import markups as nav

from database import read_bd, create_user, create_appeal_True, read_appeal_True, create_appeal
from database import create_screenshot

bot = Bot(token=TOKIN, parse_mode="HTML")
dp = Dispatcher(bot)
    
@dp.message_handler(commands=["start"])
async def command_start(message: types.Message):
    user_id = read_bd(str(message.from_user.id))
    if user_id == True:
        mass_text = "start"
        create_appeal_True(message.from_user.id, mass_text)
    elif user_id == False:
        create_user(message.from_user)
    await bot.send_message(message.from_user.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {0.first_name}!\n'
                           '–î–ª—è –Ω–∞—á–∞–ª–∞, —Ö–æ—Ç–∏–º —Å–∫–∞–∑–∞—Ç—å —Å–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. –≠—Ç–æ –Ω–∞—Å –æ—á–µ–Ω—å —Ä–∞–¥—É–µ—Ç!\n'
                           '–ê –µ—â–µ, –¥–ª—è –Ω–∞—Å –≤–∞–∂–Ω–æ –≤–∞—à–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ –Ω–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ.\n'
                           '–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ –≤–∞–º –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –≤–∞–∫—É—É–º–Ω—ã–π —É–ø–∞–∫–æ–≤—â–∏–∫ –ø–æ—Å–ª–µ –ø–∞—Ä—ã —à–∞–≥–æ–≤.\n\n'
                           '1. –°–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –≤ –∫–∞–∫–æ–º –∏–∑ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –≤—ã –µ–≥–æ –∫—É–ø–∏–ª–∏. –ù–∞–∂–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.\n\n'
                           '2. –ù–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É –ø–æ–∫—É–ø–∫–∏.\n\n'
                           '3. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, –≤—ã –º–æ–∂–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º, –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–±—Ä–∞—â–µ–Ω–∏–µ"'.format(message.from_user), reply_markup=nav.mainMenu)
    
    
@dp.message_handler(text="OZON")
async def bot_message(message: types.Message):
    mass_text = "OZON"
    create_appeal_True(message.from_user.id, mass_text)
    await bot.send_message(message.from_user.id, '–û—Ç–ª–∏—á–Ω–æ {0.first_name}. –°–ø–∞—Å–∏–±–æ –≤–∞–º!\n'
                           '–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –¥–∞—Ç—É –∫–æ–≥–¥–∞ –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –≤–∞–∫—É—É–º–Ω—ã–π —É–ø–∞–∫–æ–≤—â–∏–∫.'.format(message.from_user), reply_markup=nav.backerMenu)
    
@dp.message_handler(text="Wildberries")
async def bot_message(message: types.Message):
    mass_text = "Wildberries"
    create_appeal_True(message.from_user.id, mass_text)
    await bot.send_message(message.from_user.id, '–û—Ç–ª–∏—á–Ω–æ {0.first_name}. –°–ø–∞—Å–∏–±–æ –≤–∞–º!\n'
                           '–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –¥–∞—Ç—É –∫–æ–≥–¥–∞ –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –≤–∞–∫—É—É–º–Ω—ã–π —É–ø–∞–∫–æ–≤—â–∏–∫.'.format(message.from_user), reply_markup=nav.backerMenu)

@dp.message_handler(text="–û–±—Ä–∞—â–µ–Ω–∏–µ")
async def bot_message(message: types.Message):
    mass_text = "–û–±—Ä–∞—â–µ–Ω–∏–µ"
    create_appeal_True(message.from_user.id, mass_text)
    await bot.send_message(message.from_user.id, '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç—É—Ç –∏ –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—É—á–∏—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.'.format(message.from_user), reply_markup=nav.backerMenu)


@dp.message_handler(text="1. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ")
async def bot_message(message: types.Message):
    mass_text = "1. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"
    create_appeal_True(message.from_user.id, mass_text)
    await command_start(message)
       
@dp.message_handler()
async def bot_message(message: types.Message):
    read_appeal_text = read_appeal_True(message.from_user.id)
    if read_appeal_text == "–û–±—Ä–∞—â–µ–Ω–∏–µ":
        create_appeal(message.from_user.id, message.text)
        await bot.send_message(chat_id=id_user[0], text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º https://t.me/{message.from_user.username} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n{message.text}".format(message.from_user))
        await bot.send_message(message.from_user.id, '–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –≤ —Ä–∞–±–æ—Ç—É. –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏üòä –¢–∞–∫–∂–µ —É –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –µ—Å—Ç—å —Ä–∞–±–æ—á–∏–π –≥—Ä–∞—Ñ–∏–∫ –∏ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö –æ–Ω –æ—Ç–¥—ã—Ö–∞–µ—Çüòú'.format(message.from_user), reply_markup=nav.backerMenu)
    elif read_appeal_text in ["OZON", "Wildberries"]:
        date_sale = create_screenshot(message.from_user.id, message.text)
        await bot.send_message(message.from_user.id, f'{date_sale}'.format(message.from_user))
    else:
        await bot.send_message(message.from_user.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª'.format(message.from_user))   
       
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)